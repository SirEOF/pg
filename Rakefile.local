#!rake

require 'rake/extensiontask'
require 'rbconfig'

# C extension constants
EXT_MAKEFILE  = EXTDIR + 'Makefile'
EXT_SOURCES   = FileList[ EXTDIR + '*.c' ]
EXT_SO        = EXTDIR + "pg.#{CONFIG['DLEXT']}"

SITEARCH_DIR  = LIBDIR + Config::CONFIG['sitearch']

#####################################################################
###	T A S K S
#####################################################################

# Make both the default task and the spec task depend on building the extension
task :local => :compile
task :spec => :compile
namespace :spec do
	task :doc   => [ :compile ]
	task :quiet => [ :compile ]
	task :html  => [ :compile ]
	task :text  => [ :compile ]
end

Rake::ExtensionTask.new do |ext|
	ext.name = 'pg'
	ext.gem_spec = GEMSPEC
	ext.ext_dir = 'ext'
	ext.lib_dir = 'lib'
	ext.source_pattern = "*.{c,h}"

	# If there's an explicit 'compile' argument, use everything after it as options.
	if offset = ARGV.index( 'compile' )
		trace "config options = %p" % [ ARGV[(offset + 1)..-1] ]
		ext.config_options = ARGV[ (offset + 1)..-1 ]
	# Otherwise, just grab everything from the first option onward
	elsif offset = ARGV.index( ARGV.find {|arg| arg =~ /^--/ } )
		trace "config options = %p" % [ ARGV[offset..-1] ]
		ext.config_options = ARGV[ offset..-1 ]
	else
		trace "No config options (ARGV = %p)" % [ ARGV ]
	end

	# ext.cross_compile = true
	# ext.cross_platform = 'i386-mswin32'
end


desc "Stop any Postmaster instances that remain after testing."
task :cleanup_testing_dbs do
    require 'spec/lib/helpers'
    PgTestingHelpers.stop_existing_postmasters()
    Rake::Task[:clean].invoke
end

